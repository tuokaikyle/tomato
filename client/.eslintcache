[{"D:\\React\\react-tomato\\client\\src\\App.js":"1","D:\\React\\react-tomato\\client\\src\\index.js":"2","D:\\React\\react-tomato\\client\\src\\components\\Read.js":"3","D:\\React\\react-tomato\\client\\src\\components\\Card.js":"4","D:\\React\\react-tomato\\client\\src\\reducers\\reducerFn.js":"5","D:\\React\\react-tomato\\client\\src\\components\\Add.js":"6","D:\\React\\react-tomato\\client\\src\\utils\\utils.js":"7","D:\\React\\react-tomato\\client\\src\\components\\Nav.js":"8","D:\\React\\react-tomato\\client\\src\\components\\Welcome.js":"9","D:\\React\\react-tomato\\client\\src\\components\\Edit.js":"10"},{"size":3497,"mtime":1610976870161,"results":"11","hashOfConfig":"12"},{"size":219,"mtime":1607740812694,"results":"13","hashOfConfig":"12"},{"size":3942,"mtime":1610978049865,"results":"14","hashOfConfig":"12"},{"size":1882,"mtime":1609075294204,"results":"15","hashOfConfig":"12"},{"size":1069,"mtime":1609077934072,"results":"16","hashOfConfig":"12"},{"size":2436,"mtime":1609140211231,"results":"17","hashOfConfig":"12"},{"size":590,"mtime":1609135665126,"results":"18","hashOfConfig":"12"},{"size":1209,"mtime":1610978294595,"results":"19","hashOfConfig":"12"},{"size":1889,"mtime":1610978407190,"results":"20","hashOfConfig":"12"},{"size":3938,"mtime":1609140211231,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dp9jsx",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\react-tomato\\client\\src\\App.js",[],"D:\\React\\react-tomato\\client\\src\\index.js",[],["47","48"],"D:\\React\\react-tomato\\client\\src\\components\\Read.js",["49","50","51"],"D:\\React\\react-tomato\\client\\src\\components\\Card.js",["52","53","54"],"import React, { useContext } from 'react';\r\nimport { GeneralContext } from '../App';\r\nimport { groupNames } from '../utils/utils';\r\n\r\nconst Card = ({ props }) => {\r\n  const { bgc, content, group } = props;\r\n  const { state, dispatch } = useContext(GeneralContext);\r\n\r\n  const active = groupNames.filter((i) => i.shortName === group)[0];\r\n  const colorReplace = bgc.slice(11).replace('lighten-4', '');\r\n\r\n  return (\r\n    <div\r\n      className={bgc}\r\n      style={{ height: '22em', width: '20em', marginInline: '1em' }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          marginBottom: '1em',\r\n        }}\r\n      >\r\n        <h6>{active.fullName}</h6>\r\n        <a className={`${colorReplace} btn-floating waves-effect waves-light`}>\r\n          <i\r\n            className='material-icons'\r\n            onClick={() => {\r\n              dispatch({\r\n                type: 'ADDING',\r\n                payload: active.shortName,\r\n              });\r\n            }}\r\n          >\r\n            add\r\n          </i>\r\n        </a>\r\n      </div>\r\n\r\n      <span className='white-text'>\r\n        {content.map((i, key) => (\r\n          <div key={key}>\r\n            <a\r\n              className={`${colorReplace} waves-effect waves-light btn`}\r\n              style={{\r\n                width: '100%',\r\n                textTransform: 'capitalize',\r\n                textAlign: 'left',\r\n                overflow: 'hidden',\r\n                marginBottom: '5px',\r\n              }}\r\n              onClick={() => {\r\n                dispatch({\r\n                  type: 'READ',\r\n                  payload: {\r\n                    items: i,\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              {i.title}\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","D:\\React\\react-tomato\\client\\src\\reducers\\reducerFn.js",[],["55","56"],"D:\\React\\react-tomato\\client\\src\\components\\Add.js",["57"],"import React, { useContext, useState, useRef } from 'react';\r\nimport { GeneralContext } from '../App';\r\nimport { getGroupName } from '../utils/utils';\r\nimport M from 'materialize-css';\r\n\r\nconst Add = () => {\r\n  const { state, dispatch } = useContext(GeneralContext);\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [due, setDue] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const group = state.add_to;\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const send = {\r\n      group,\r\n      title,\r\n      description,\r\n      due,\r\n    };\r\n    try {\r\n      const result = await (\r\n        await fetch('/addtomato', {\r\n          method: 'post',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ send }),\r\n        })\r\n      ).json();\r\n      dispatch({ type: 'ADDED' });\r\n      dispatch({ type: 'NO_TASK' });\r\n      M.toast({ html: result.message, classes: 'green darken-1' });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {state ? (\r\n        <div className='row'>\r\n          <form className='col s12' onSubmit={submitHandler}>\r\n            <h5>{getGroupName(state.add_to)}</h5>\r\n\r\n            <div className='input-field'>\r\n              <label htmlFor=''>Title</label>\r\n              <input\r\n                id='title'\r\n                type='text'\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='input-field'>\r\n              <input\r\n                type='date'\r\n                value={due}\r\n                onChange={(e) => {\r\n                  setDue(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='input-field'>\r\n              <label htmlFor=''>Description</label>\r\n              <textarea\r\n                id='textarea1'\r\n                className='materialize-textarea'\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              ></textarea>\r\n            </div>\r\n            <input className='btn' type='submit' name='Submit' />\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        'loading'\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","D:\\React\\react-tomato\\client\\src\\utils\\utils.js",[],["58","59"],"D:\\React\\react-tomato\\client\\src\\components\\Nav.js",["60","61"],"D:\\React\\react-tomato\\client\\src\\components\\Welcome.js",["62","63"],"D:\\React\\react-tomato\\client\\src\\components\\Edit.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":50,"nodeType":"70","messageId":"71","endLine":1,"endColumn":56},{"ruleId":"72","severity":1,"message":"73","line":110,"column":17,"nodeType":"74","endLine":115,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":120,"column":17,"nodeType":"74","endLine":125,"endColumn":18},{"ruleId":"68","severity":1,"message":"75","line":7,"column":11,"nodeType":"70","messageId":"71","endLine":7,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":25,"column":9,"nodeType":"74","endLine":25,"endColumn":80},{"ruleId":"72","severity":1,"message":"73","line":43,"column":13,"nodeType":"74","endLine":60,"endColumn":14},{"ruleId":"64","replacedBy":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":39,"nodeType":"70","messageId":"71","endLine":1,"endColumn":45},{"ruleId":"64","replacedBy":"78"},{"ruleId":"66","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"73","line":31,"column":17,"nodeType":"74","endLine":31,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":40,"column":15,"nodeType":"74","endLine":40,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":9,"column":26,"nodeType":"82","messageId":"83","endLine":9,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":23,"column":11,"nodeType":"86","endLine":23,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'state' is assigned a value but never used.",["87"],["88"],["87"],["88"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]